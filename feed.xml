<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.3.4">Jekyll</generator><link href="https://mzhou02.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://mzhou02.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2024-09-16T23:56:57+00:00</updated><id>https://mzhou02.github.io/feed.xml</id><title type="html">blank</title><subtitle></subtitle><entry><title type="html">Minimum number of lines from non-collinear points</title><link href="https://mzhou02.github.io/blog/2024/vega-lite-copy-2/" rel="alternate" type="text/html" title="Minimum number of lines from non-collinear points"/><published>2024-09-16T16:42:00+00:00</published><updated>2024-09-16T16:42:00+00:00</updated><id>https://mzhou02.github.io/blog/2024/vega-lite%20copy%202</id><content type="html" xml:base="https://mzhou02.github.io/blog/2024/vega-lite-copy-2/"><![CDATA[<p>I’ve recently been reading more about algebraic methods within combinatorics, and have been fascinated by the appearances of topics like linear algebra in the subject. In this blog post, I’ll share one of my favorite problems I’ve come across recently that is really just inspired by some incredibly simple ideas.</p> <p><b>Problem 1.</b> What is the minimum number of lines \(n\) non-collinear points form if all lines are drawn between points?</p> <p>It is easy to see that we can achieve \(n\) lines by simply leaving \(n - 1\) collinear points on a line and the last point off the line, to have \(1 + (n - 1) = n\) lines formed by these points. Indeed, this is the best case possible.</p> <p>To demonstrate why, we can assign variables \(x_i\) to each of the points, and define a system of equations as:</p> \[\sum_{j : x_j \in l_i}x_i = 0.\] <p>That is, the sum of all the variables on that line is equal to 0. Assuming that there is a placement of \(n\) points that produces less than \(n\) lines, we will have at most \(n - 1\) equations and \(n\) variables, meaning that there exists a nontrivial solution (this is the key idea of the proof). Since the square of non-zero numbers is strictly larger than 0, it would make sense if we square each equation and add them all up, like this:</p> \[\sum_{i = 1}^{m}\left(\sum_{j : x_j \in l_i} x_i\right)^2 = \sum_{i = 1}^n a_i x_i^2 + 2\sum_{1 \leq i &lt; j \leq n} a_{i, j} x_i x_j = 0\] <p>where \(a_i\) is the number of lines that \(x_i\) shows up on and \(a_{i, j}\) is the number of lines \(x_i\) and \(x_j\) show up on. Since our points are not all on a single line, \(a_i &gt; 1\), and since all lines are drawn between points and two points define a line, we have that \(a_{i, j}\) equals exactly 1. Thus,</p> \[0 = \sum_{i = 1}^n a_i x_i^2 + 2\sum_{1 \leq i &lt; j \leq n} a_{i, j} x_i x_j = \sum_{i = 1}^n (a_i - 1) x_i^2 + \left(\sum_{i = 1}^n x_i \right)^2.\] <p>Because we have a non-trivial solution, \(0 = \sum_{i = 1}^n a_i x_i^2 + 2\sum_{1 \leq i &lt; j \leq n} a_{i, j} x_i x_j = \sum_{i = 1}^n (a_i - 1) x_i^2 + \left(\sum_{i = 1}^n x_i \right)^2 &gt; 0\)</p> <p>and we have a contradiction.</p>]]></content><author><name></name></author><category term="math"/><category term="combinatorics"/><summary type="html"><![CDATA[I’ve recently been reading more about algebraic methods within combinatorics, and have been fascinated by the appearances of topics like linear algebra in the subject. In this blog post, I’ll share one of my favorite problems I’ve come across recently that is really just inspired by some incredibly simple ideas.]]></summary></entry><entry><title type="html">Displaying External Posts on Your al-folio Blog</title><link href="https://mzhou02.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/" rel="alternate" type="text/html" title="Displaying External Posts on Your al-folio Blog"/><published>2022-04-23T23:20:09+00:00</published><updated>2022-04-23T23:20:09+00:00</updated><id>https://mzhou02.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog</id><content type="html" xml:base="https://mzhou02.github.io/blog/2022/displaying-external-posts-on-your-al-folio-blog/"><![CDATA[]]></content><author><name></name></author></entry></feed>